//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Website.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MyInvoic", ReplyAction="http://tempuri.org/IService1/MyInvoicResponse")]
        double MyInvoic(int CustID, int CarID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MyInvoic", ReplyAction="http://tempuri.org/IService1/MyInvoicResponse")]
        System.Threading.Tasks.Task<double> MyInvoicAsync(int CustID, int CarID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFreePositionsForShowMap", ReplyAction="http://tempuri.org/IService1/GetFreePositionsForShowMapResponse")]
        int[] GetFreePositionsForShowMap();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetFreePositionsForShowMap", ReplyAction="http://tempuri.org/IService1/GetFreePositionsForShowMapResponse")]
        System.Threading.Tasks.Task<int[]> GetFreePositionsForShowMapAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNonFreePositionsForShowMap", ReplyAction="http://tempuri.org/IService1/GetNonFreePositionsForShowMapResponse")]
        int[] GetNonFreePositionsForShowMap();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNonFreePositionsForShowMap", ReplyAction="http://tempuri.org/IService1/GetNonFreePositionsForShowMapResponse")]
        System.Threading.Tasks.Task<int[]> GetNonFreePositionsForShowMapAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Website.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Website.ServiceReference1.IService1>, Website.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double MyInvoic(int CustID, int CarID) {
            return base.Channel.MyInvoic(CustID, CarID);
        }
        
        public System.Threading.Tasks.Task<double> MyInvoicAsync(int CustID, int CarID) {
            return base.Channel.MyInvoicAsync(CustID, CarID);
        }
        
        public int[] GetFreePositionsForShowMap() {
            return base.Channel.GetFreePositionsForShowMap();
        }
        
        public System.Threading.Tasks.Task<int[]> GetFreePositionsForShowMapAsync() {
            return base.Channel.GetFreePositionsForShowMapAsync();
        }
        
        public int[] GetNonFreePositionsForShowMap() {
            return base.Channel.GetNonFreePositionsForShowMap();
        }
        
        public System.Threading.Tasks.Task<int[]> GetNonFreePositionsForShowMapAsync() {
            return base.Channel.GetNonFreePositionsForShowMapAsync();
        }
    }
}
